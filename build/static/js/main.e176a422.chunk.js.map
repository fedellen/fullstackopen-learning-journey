{"version":3,"sources":["services/talkTo.js","components/Notification.js","components/Person.js","App.js","index.js"],"names":["axios","get","then","response","data","newObject","post","id","delete","put","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","margin","padding","Person","person","handleDelete","name","number","onClick","SubmissionForm","persons","addPerson","setPersons","sendNotif","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","event","preventDefault","newPerson","existingPerson","find","object","window","confirm","talkTo","map","catch","err","error","value","onChange","target","type","Filter","newFilter","handleFilter","App","setNewFilter","alertMessage","setAlertMessage","messageColor","setMessageColor","text","setTimeout","useEffect","initialPersons","doFilter","filterValue","filter","el","toLowerCase","indexOf","showPeople","console","log","concat","i","key","n","confirmMessage","status","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e176a422.chunk.js","sourcesContent":["import axios from 'axios'\nconst location = '/api/persons'\n\nconst getPeople = () => {\n    const request = axios.get(location)\n    return request.then(response => response.data)\n}\n\nconst addPeople = newObject => {\n    const request = axios.post(location, newObject)\n    return request.then(response => response.data)\n}\n\nconst deletePeople = id => {\n    const request = axios.delete(`${location}/${id}`)\n    return request.then(response => response)\n}\n\n\nconst updatePeople = ( id, newObject ) => {\n    const request = axios.put(`${location}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\n\nexport default { \n    getPeople, \n    addPeople, \n    deletePeople, \n    updatePeople \n}","import React from 'react'\n\nconst Notification = ({ message, color }) => {\n\n    const style = { \n        color: color,\n        background: 'lightgrey',\n        fontSize: 26,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        margin: 20,\n        padding: 20\n    }\n\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div style={style} >\n            {message}\n        </div>\n    )\n\n}\n\nexport default Notification","import React from 'react'\n\nconst Person = ({ person, handleDelete }) => (\n    <div>\n        <div>Name: {person.name}</div>\n        <div>Number: {person.number}</div>\n        <button onClick={handleDelete}>Delete Person</button> \n        <br /><br />\n    </div>\n)\n\nexport default Person","import React, { useEffect, useState } from 'react'\nimport talkTo from './services/talkTo'\nimport Notification from './components/Notification'\nimport Person from './components/Person'\n\nconst SubmissionForm = ({ persons, addPerson, setPersons, sendNotif }) => {\n\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n\n  const handleNumberSubmit = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const addName = (event) => {\n\n    event.preventDefault()\n\n    const newPerson = { name: newName, number: newNumber }\n    const existingPerson = persons.find( object => object['name'] === newName )\n\n    if (existingPerson) {\n\n      const message = `${newName} is already in the phonebook. Would you like to replace the old number with the new one?`\n\n      if (window.confirm(message)) {\n        talkTo.updatePeople(existingPerson.id, newPerson).then(response => {\n          setPersons(persons.map(person => person.id !== existingPerson.id\n            ? person\n            : response\n          ))\n          sendNotif(`Updated number for ${newName}`, 'green')\n        })\n        .catch(err => {\n          sendNotif(err.response.data.error)\n        })\n      }      \n    } else {\n      addPerson(newPerson)\n    }\n\n    setNewName('')\n    setNewNumber('')\n  }\n\n  return(\n    <form onSubmit={addName} >\n      <div>\n        name: <input value={newName} onChange={handleSubmit} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNumberSubmit} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\n\n\n\nconst Filter = ({newFilter, handleFilter}) => (\n  <div>\n    filter show with name: <input value={newFilter} onChange={handleFilter}  />\n  </div>\n)\n\nconst App = () => {\n\n  const [ persons, setPersons ] = useState([]) \n  const [ newFilter, setNewFilter ] = useState('')\n  const [ alertMessage, setAlertMessage ] = useState(null)\n  const [ messageColor, setMessageColor ] = useState('green')\n\n    // Use Notification Component\n  const message = (text, color) => {\n    color ? setMessageColor(color) : setMessageColor('red')\n    setAlertMessage(text)\n    setTimeout(() => setAlertMessage(null), 5000)\n  }\n\n    // Populate initial Phonebook from server\n  useEffect(() => {\n    talkTo.getPeople().then(initialPersons => setPersons(initialPersons))\n  }, [])\n\n  \n  const doFilter = (filterValue) => (\n    persons.filter(el => el.name.toLowerCase().indexOf(filterValue.toLowerCase()) !== -1)\n  )\n\n  let showPeople = doFilter(newFilter)\n\n  const handleFilter = (event) => {\n    setNewFilter(event.target.value)\n    showPeople = doFilter(newFilter)\n    console.log(showPeople);\n  }\n\n  const addPerson = (object) => {\n      // Add person to back end\n    talkTo\n      .addPeople(object)\n      .then(response => {\n        setPersons(persons.concat(response))\n          // Re-filter the content\n        showPeople = doFilter(newFilter) \n        message(`added ${object.name} to the Phonebook`, 'green')\n      })\n      .catch(err => {\n        message(err.response.data.error)\n      })\n  }  \n\n  \n\n  const handleDelete = id => {\n\n      // Get the person\n    const person = persons.find(n => n.id === id)\n    const confirmMessage = `Are you sure you want to Delete ${person.name} from the Phonebook?`\n\n      // Await browser confirmation\n    if (window.confirm(confirmMessage)) {\n      talkTo.deletePeople(id).then(response => {\n        if (response.status === 204) {\n          setPersons(persons.filter(i => i !== person))\n          message(`${person.name} has been deleted from the Phonebook`, 'green')\n        } else {\n          message('Person could not be deleted.', 'red')\n        }\n      })\n    } \n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={alertMessage} color={messageColor} />\n      <Filter newFilter={newFilter} handleFilter={handleFilter} />\n      <h3>Add a new number:</h3>\n      <SubmissionForm persons={persons} addPerson={addPerson} setPersons={setPersons} sendNotif={message} />\n      <h2>Numbers</h2>\n      {showPeople.map((person, i) =>\n        <Person\n          key={i} \n          person={person}\n          handleDelete={() => handleDelete(person.id)}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}