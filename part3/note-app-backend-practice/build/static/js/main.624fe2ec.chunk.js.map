{"version":3,"sources":["components/Note.js","components/Footer.js","components/Notification.js","services/notes.js","app.js","index.js"],"names":["Note","note","toggleImportanceOf","label","important","className","content","onClick","Footer","style","color","fontStyle","fontSize","Notification","message","axios","get","then","response","data","newObject","post","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","console","log","length","notesToShow","filter","map","i","key","find","n","changedNote","returnedNote","catch","error","setTimeout","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"0MAeeA,EAbF,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,mBAEZC,EAAQF,EAAKG,UACb,oBAAsB,iBAE7B,OACK,wBAAIC,UAAU,QACTJ,EAAKK,QACN,4BAAQC,QAASL,GAAsBC,KCQpCK,EAhBA,WAOX,OACI,yBAAKC,MANW,CAChBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAIN,6BACA,qGACA,2BAAG,gECGAC,EAdM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEpB,OAAgB,OAAZA,EACO,KAIP,yBAAKT,UAAU,SACVS,I,gBCuBE,EA5BA,WAEX,OADgBC,IAAMC,IALV,cAMGC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SA0B9B,EAVA,SAAAC,GAEX,OADgBL,IAAMM,KAvBV,aAuBwBD,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAEhB,OADgBL,IAAMQ,IAAN,UA5BJ,aA4BI,YAAwBD,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SC0E9BK,EAlGH,WAAO,IAAD,EAEUC,mBAAS,IAFnB,mBAETC,EAFS,KAEFC,EAFE,OAGcF,mBAAS,IAHvB,mBAGTG,EAHS,KAGAC,EAHA,OAIcJ,oBAAS,GAJvB,mBAITK,EAJS,KAIAC,EAJA,OAKwBN,mBAAS,MALjC,mBAKTO,EALS,KAKKC,EALL,KA+BhBC,qBAAU,WACRC,IAEGlB,MAAK,SAAAmB,GACJT,EAASS,QAEZ,IAEHC,QAAQC,IAAI,SAAUZ,EAAMa,OAAQ,SAEpC,IAuBMC,EAAcV,EAChBJ,EACAA,EAAMe,QAAO,SAAAxC,GAAI,OAAIA,EAAKG,aAE9B,OACE,6BACE,qCACA,kBAAC,EAAD,CAAcU,QAASkB,IACvB,6BACE,4BAAQzB,QAAS,kBAAMwB,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACGU,EAAYE,KAAI,SAACzC,EAAM0C,GAAP,OACf,kBAAC,EAAD,CACEC,IAAKD,EACL1C,KAAMA,EACNC,mBAAoB,kBA3EH,SAAAoB,GAEzB,IAAMrB,EAAOyB,EAAMmB,MAAK,SAAAC,GAAC,OAAIA,EAAExB,KAAOA,KAChCyB,EAAW,2BAAQ9C,GAAR,IAAcG,WAAYH,EAAKG,YAEhD+B,EACUb,EAAIyB,GACX9B,MAAK,SAAA+B,GACJrB,EAASD,EAAMgB,KAAI,SAAAzC,GAAI,OAAIA,EAAKqB,KAAOA,EACnCrB,EACA+C,SAGLC,OAAM,SAAAC,GACLjB,EAAgB,SAAD,OACJhC,EAAKK,QADD,0CAGf6C,YAAW,WACTlB,EAAgB,QACf,KACHN,EAASD,EAAMe,QAAO,SAAAK,GAAC,OAAIA,EAAExB,KAAOA,SAuDNpB,CAAmBD,EAAKqB,WAIxD,0BAAM8B,SA7CM,SAACC,GACfA,EAAMC,iBAEN,IAAMC,EAAa,CACjBjD,QAASsB,EACT4B,MAAM,IAAIC,MAAOC,cACjBtD,UAAWuD,KAAKC,SAAW,IAG7BzB,EACUoB,GACPtC,MAAK,SAAA+B,GACJrB,EAASD,EAAMmC,OAAOb,IACtBnB,EAAW,SAiCT,2BACEiC,MAAOlC,EACPmC,SA9Be,SAACV,GACxBhB,QAAQC,IAAIe,EAAMW,OAAOF,OACzBjC,EAAWwB,EAAMW,OAAOF,UA8BlB,4BAAQG,KAAK,UAAb,SAEJ,kBAAC,EAAD,Q,MC9FNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.624fe2ec.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportanceOf }) => {\r\n\r\n    const label = note.important\r\n        ? 'Make Not Imporant' : 'Make Important'\r\n\r\n   return( \r\n        <li className='note' >\r\n            {note.content}\r\n            <button onClick={toggleImportanceOf} >{label}</button>\r\n        </li>\r\n   )\r\n}\r\n\r\nexport default Note","import React from 'react'\n\nconst Footer = () => {\n    \n    const footerStyle = {\n        color: 'green',\n        fontStyle: 'italic',\n        fontSize: 16\n    }\n    return (\n        <div style={footerStyle}>\n            <br />\n            <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\n            <p><em>made by fedellen ðŸ˜Ž</em></p>\n        </div>\n    )\n}\n\nexport default Footer","import React from 'react'\n\nconst Notification = ({ message }) => {\n\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"error\" >\n            {message}\n        </div>\n    )\n\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\n\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\n/*\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    const nonExisting = {\n        id: 10000,\n        content: 'This note is not saved to server',\n        date: '2019-05-30T17:30:30.098Z',\n        important: true\n    }\n    return request.then(response => response.data.concat(nonExisting))\n}\n*/\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }","import React, { useEffect, useState } from 'react'\r\nimport Note from './components/Note'\r\nimport Footer from './components/Footer'\r\nimport Notification from './components/Notification'\r\nimport noteService from './services/notes'\r\n\r\nconst App = () => {\r\n  \r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState('')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  const toggleImportanceOf = id => {\r\n\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id \r\n          ? note \r\n          : returnedNote\r\n        ))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(\r\n          `Note '${note.content}' was already removed from the server`\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        setNotes(notes.filter(n => n.id !== id))\r\n        })\r\n  }\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n      .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      })\r\n  }, [])\r\n\r\n  console.log('render', notes.length, 'notes')\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() < 0.5,\r\n    }\r\n\r\n    noteService\r\n      .create(noteObject)\r\n      .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote))\r\n        setNewNote('')\r\n      })\r\n\r\n  }\r\n\r\n  const handleNoteChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter(note => note.important) \r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          Show {showAll ? 'Important' : 'All'}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {notesToShow.map((note, i) => \r\n          <Note \r\n            key={i} \r\n            note={note}\r\n            toggleImportanceOf={() => toggleImportanceOf(note.id)}\r\n          />\r\n        )}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n          <input \r\n            value={newNote}\r\n            onChange={handleNoteChange}  \r\n          />\r\n          <button type=\"submit\">Save</button>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}